#pragma checksum "C:\Users\user\Desktop\_rs1 -verz\_rs1 -nova17 -file uploads\_rs1 -nova17 -file uploads\PRENATALv2\PRENATALv2\Areas\Home\Views\Charts\VitalSigns.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "5904b061b11280f81b58df86eccf6437559fd92f"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Home_Views_Charts_VitalSigns), @"mvc.1.0.view", @"/Areas/Home/Views/Charts/VitalSigns.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5904b061b11280f81b58df86eccf6437559fd92f", @"/Areas/Home/Views/Charts/VitalSigns.cshtml")]
    public class Areas_Home_Views_Charts_VitalSigns : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<int>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "C:\Users\user\Desktop\_rs1 -verz\_rs1 -nova17 -file uploads\_rs1 -nova17 -file uploads\PRENATALv2\PRENATALv2\Areas\Home\Views\Charts\VitalSigns.cshtml"
  
    Layout = "_Layout";

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\user\Desktop\_rs1 -verz\_rs1 -nova17 -file uploads\_rs1 -nova17 -file uploads\PRENATALv2\PRENATALv2\Areas\Home\Views\Charts\VitalSigns.cshtml"
Write(Html.AntiForgeryToken());

#line default
#line hidden
#nullable disable
            WriteLiteral(@"

<script type=""text/javascript"" src=""https://www.gstatic.com/charts/loader.js""></script>
<script type=""text/javascript"">
      google.charts.load('current', {'packages':['corechart']});
      google.charts.setOnLoadCallback(drawChart);

      function drawChart() {
          var jsonData = $.ajax({
                url: ""/Home/Charts/GetVitalSigns?Id=");
#nullable restore
#line 14 "C:\Users\user\Desktop\_rs1 -verz\_rs1 -nova17 -file uploads\_rs1 -nova17 -file uploads\PRENATALv2\PRENATALv2\Areas\Home\Views\Charts\VitalSigns.cshtml"
                                               Write(Model);

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                dataType: ""json"",
                async: false
          }).responseJSON;

          var data = new google.visualization.DataTable();
          var data_01 = new google.visualization.DataTable();
          var data_02 = new google.visualization.DataTable();

          data.addColumn('date', 'Date',);
          data.addColumn('number', 'Temperature', 'interval');
          data.addColumn('number', 'SystolicPressure', 'interval');
          data.addColumn('number', 'DiastolicPressure', 'interval');
          data.addColumn('number', 'HeartBeats', 'interval');
          data.addColumn('number', 'RespiratoryRate', 'interval');
          data.addColumn('number', 'Weight', 'interval');

          for (var i = 0; i < jsonData.length; i++) {
              var dateStr = jsonData[i].date.substr(0, 10);
              data.addRow([new Date(dateStr), parseFloat(jsonData[i].temperature),
                  parseInt(jsonData[i].systolicPressure), parseInt(jsonData[i].diastolicPressure),");
            WriteLiteral(@"
                  parseInt(jsonData[i].heartBeats), parseInt(jsonData[i].respiratoryRate),
                  parseFloat(jsonData[i].weight)]);

          }

          data_01.addColumn('date', 'Date');
          data_01.addColumn('number', 'SystolicPressure', 'interval');
          data_01.addColumn('number', 'DiastolicPressure', 'interval');
          data_01.addColumn('number', 'HeartBeats', 'interval');
          for (var i = 0; i < jsonData.length; i++) {
              var dateStr = jsonData[i].date.substr(0, 10);
              data_01.addRow([new Date(dateStr),parseInt(jsonData[i].systolicPressure), parseInt(jsonData[i].diastolicPressure),
              parseInt(jsonData[i].heartBeats)]);

          }

          data_02.addColumn('date', 'Date');
          data_02.addColumn('number', 'Temperature', 'interval');
          data_02.addColumn('number', 'RespiratoryRate', 'interval');
          data_02.addColumn('number', 'Weight', 'interval');
          for (var i = 0; i < jsonData.leng");
            WriteLiteral(@"th; i++) {
              var dateStr = jsonData[i].date.substr(0, 10);
                  data_02.addRow([new Date(dateStr), parseFloat(jsonData[i].temperature), parseInt(jsonData[i].respiratoryRate),
                  parseFloat(jsonData[i].weight)]);

          }

          var options_lines = {
              title: 'All VitalSign intervals',
              curveType: 'function',
              lineWidth: 4,
              legend: { position: 'top', maxLines: 7 },
              hAxis: {
                  format: 'MMM, y',
                  viewWindowMode:'explicit'
              }

          };
          var options_lines_01 = {
              title: 'Pressure&HeartBeats Intervals',
              curveType: 'function',
              lineWidth: 4,
              legend: { position: 'top', maxLines: 4 },
              hAxis: {
                  format: 'MMM, y',
                  viewWindowMode: 'explicit'
              }

          };
          var options_lines_02 = {
              t");
            WriteLiteral(@"itle: 'Temperature/Respiratory/Weight Intervals',
              curveType: 'function',
              lineWidth: 4,
              legend: { position: 'top', maxLines: 4 },
              hAxis: {
                  format: 'MMM, y',
                  viewWindowMode: 'explicit'
              }

          };
          var options_combo = {
              title: 'All VitalSigns',
              seriesType: 'bars',
              series: { 6: { type: 'line' } },
              legend: { position: 'top', maxLines: 6 },
              hAxis: {
                  format: 'MMM, y',
                  viewWindowMode: 'explicit'
              }

          };

          var chart_lines = new google.visualization.LineChart(document.getElementById('chart_lines'));
          chart_lines.draw(data, options_lines);
          var chart_lines = new google.visualization.LineChart(document.getElementById('chart_lines_01'));
          chart_lines.draw(data_01, options_lines_01);
          var chart_lines = new goo");
            WriteLiteral(@"gle.visualization.LineChart(document.getElementById('chart_lines_02'));
          chart_lines.draw(data_02, options_lines_02);
          var chart_lines = new google.visualization.ComboChart(document.getElementById('chart_histogram'));
          chart_lines.draw(data, options_combo);
      }
</script>

<div class=""container"">
    <div id=""chart_lines"" style=""width: 1100px; height: 600px;""></div>
    <div id=""chart_lines_01"" style=""width: 1100px; height: 600px;""></div>
    <div id=""chart_lines_02"" style=""width: 1100px; height: 600px;""></div>
    <div id=""chart_histogram"" style=""width: 1100px; height: 600px;""></div>
</div>

");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<int> Html { get; private set; }
    }
}
#pragma warning restore 1591
